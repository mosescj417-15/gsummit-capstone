{
  "title": "GSummit Capstone",
  "version": "2.4",
  "settings": {
    "pagenumber": 1,
    "editable": true,
    "fullscreenEnabled": false,
    "parameters": {
      "neodash_startlocation": "hotel",
      "neodash_endlocation": "information",
      "neodash_startId": "999526140",
      "neodash_endId": "422438959",
      "neodash_undefined": "The Standard, East Village",
      "neodash_startId2": "Invisible Man: A Memorial to Ralph Ellison",
      "neodash_endId2": "Casa Cipriani New York",
      "neodash_crash_date": "03/21/2022",
      "neodash_crash_date_display": "03/21/2022",
      "neodash_en": "Mandarin Oriental, New York",
      "neodash_en2": "Statue of Walter Scott (New York City)",
      "neodash_poi_tourism_type": "hotel",
      "neodash_poi_tourism_type_display": "hotel",
      "neodash_poi_tourism_type_2": "artwork",
      "neodash_poi_tourism_type_2_display": "artwork"
    },
    "theme": "light"
  },
  "pages": [
    {
      "title": "Digital Twin Details",
      "reports": [
        {
          "id": "e2d1ce45-c430-4749-a873-3e26a7600d70",
          "title": "POIs in Manhattan",
          "query": "Match (p:POI)\nReturn COUNT(p)\n\n\n",
          "width": 6,
          "height": 2,
          "x": 0,
          "y": 0,
          "type": "value",
          "selection": {},
          "settings": {},
          "schema": []
        },
        {
          "id": "cb28d24a-a072-45c8-b1da-17df2ff17160",
          "title": "Intersections  in Manhattan",
          "query": "MATCH (i:Intersection)\nRETURN  COUNT(i)\n\n",
          "width": 7,
          "height": 2,
          "x": 6,
          "y": 2,
          "type": "value",
          "selection": {},
          "settings": {},
          "schema": []
        },
        {
          "id": "0570e6cf-d8ef-4cca-b498-67d5bf8e6755",
          "title": "Road Segments in Manhattan",
          "query": "Match ()-[r:ROAD_SEGMENT]->()\nreturn COUNT(r)\n\n\n",
          "width": 7,
          "height": 2,
          "x": 6,
          "y": 0,
          "type": "value",
          "selection": {},
          "settings": {},
          "schema": []
        },
        {
          "id": "8c3dd9e6-ba22-4915-a4aa-3ac278c9084a",
          "title": "Crashes since 2012",
          "query": "MATCH (c:Crash)\nRETURN COUNT(c)\n\n\n",
          "width": 6,
          "height": 2,
          "x": 0,
          "y": 2,
          "type": "value",
          "selection": {},
          "settings": {},
          "schema": []
        },
        {
          "id": "6b23b563-bf9b-4087-b618-0b58ee3071f5",
          "title": "Crashes by Year",
          "query": "MATCH (c:Crash)\nWHERE date(substring(c.date, 6, 4) + '-' + substring(c.date, 0, 2) + '-' + substring(c.date, 3, 2)) > date('2010-01-01')\nWITH substring(c.date, 6, 4) AS year, COUNT(c) AS crashes\nRETURN year, crashes\nORDER BY year\n",
          "width": 7,
          "height": 4,
          "x": 0,
          "y": 4,
          "type": "bar",
          "selection": {
            "index": "year",
            "value": "crashes",
            "key": "(none)"
          },
          "settings": {
            "showOptionalSelections": false,
            "groupMode": "grouped"
          },
          "schema": []
        },
        {
          "id": "6582698f-a307-4ff4-b52f-544d9d814ebe",
          "title": "Types of POI",
          "query": "MATCH (p:POI)\nreturn p.tourism_type as Tourism_Types, COUNT(p.tourism_type) as Types\n\n\n",
          "width": 8,
          "height": 4,
          "x": 7,
          "y": 4,
          "type": "pie",
          "selection": {
            "index": "Tourism_Types",
            "value": "Types",
            "key": "(none)"
          },
          "settings": {},
          "schema": []
        }
      ]
    },
    {
      "title": "Routing",
      "reports": [
        {
          "id": "71332d84-1c58-48b2-b90f-3bf6fd185084",
          "title": "Search Start Tourism Type",
          "query": "MATCH (n:`POI`) \nWHERE toLower(toString(n.`tourism_type`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`tourism_type` as value,  n.`tourism_type` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 7,
          "height": 2,
          "x": 0,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "type": "Node Property",
            "entityType": "POI",
            "propertyType": "tourism_type",
            "propertyTypeDisplay": "tourism_type",
            "parameterName": "neodash_poi_tourism_type"
          },
          "schema": []
        },
        {
          "id": "c81eada2-561a-4fc9-96e5-e89f056668a4",
          "title": "Search End Tourism Type",
          "query": "MATCH (n:`POI`) \nWHERE toLower(toString(n.`tourism_type`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`tourism_type` as value,  n.`tourism_type` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 7,
          "height": 2,
          "x": 0,
          "y": 2,
          "type": "select",
          "selection": {},
          "settings": {
            "type": "Node Property",
            "entityType": "POI",
            "propertyType": "tourism_type",
            "propertyTypeDisplay": "tourism_type",
            "parameterName": "neodash_poi_tourism_type_2",
            "manualParameterSave": false,
            "id": "2"
          },
          "schema": []
        },
        {
          "id": "7fe8399e-8e72-45dd-b098-18eb99b7ad87",
          "title": "Shortest Path by Distance",
          "query": "MATCH (first:POI {osmid:$neodash_startId})-[:NEAREST_INTERSECTION]->(start:Intersection) \nMATCH (last:POI {osmid:$neodash_endId})-[:NEAREST_INTERSECTION]->(end:Intersection) \n  CALL apoc.algo.dijkstra(start, end, 'ROAD_SEGMENT', 'length')YIELD path, weight\nreturn path,weight,first,last\n\n\n",
          "width": 19,
          "height": 6,
          "x": 0,
          "y": 4,
          "type": "map",
          "selection": {
            "Intersection": "(no label)",
            "POI": "name"
          },
          "settings": {
            "fullscreenEnabled": true
          },
          "schema": [
            [
              "Intersection",
              "ref",
              "location",
              "highway",
              "street_count",
              "osmid"
            ],
            [
              "POI",
              "tourism_type",
              "osmid",
              "address_street",
              "name",
              "address_state",
              "location",
              "wikipedia",
              "address_zip",
              "address_city",
              "address_number"
            ]
          ]
        },
        {
          "id": "d919851b-a631-40cb-9772-f8f594ccc760",
          "title": "Select Start",
          "query": "MATCH (p:POI)\nWHERE p.tourism_type CONTAINS $neodash_poi_tourism_type AND p.wikipedia IS NOT NULL AND\np.address_number IS NOT NULL AND p.address_street IS NOT NULL AND p.address_zip IS NOT NULL\nSET p.wikipedia = REPLACE(REPLACE(p.wikipedia, 'en:', ''), '_', ' ')\nRETURN p.name AS name, p.osmid AS __ID, p.wikipedia AS __EN\n\n",
          "width": 6,
          "height": 4,
          "x": 7,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "actionsRules": [
              {
                "condition": "Click",
                "field": "name",
                "value": "__ID",
                "customization": "set variable",
                "customizationValue": "startId"
              },
              {
                "condition": "Click",
                "field": "name",
                "value": "__EN",
                "customization": "set variable",
                "customizationValue": "en"
              }
            ]
          }
        },
        {
          "id": "4f3b7511-df0e-40a4-86b9-d4f7d538f319",
          "title": "Select End",
          "query": "MATCH (p:POI)\nWHERE p.tourism_type CONTAINS $neodash_poi_tourism_type_2 AND p.wikipedia IS NOT NULL \n\nSET p.wikipedia = REPLACE(REPLACE(p.wikipedia, 'en:', ''), '_', ' ')\n\nRETURN p.name AS name, p.osmid AS __ID, p.wikipedia AS __EN\n\n\n",
          "width": 6,
          "height": 4,
          "x": 13,
          "y": 0,
          "type": "table",
          "selection": {},
          "settings": {
            "actionsRules": [
              {
                "condition": "Click",
                "field": "name",
                "value": "__ID",
                "customization": "set variable",
                "customizationValue": "endId"
              },
              {
                "condition": "Click",
                "field": "name",
                "value": "__EN",
                "customization": "set variable",
                "customizationValue": "en2"
              }
            ]
          }
        },
        {
          "id": "a82e95c0-5d8d-443a-bd2a-ade3c98f24c4",
          "title": "Shortest Path by Time With GDS",
          "query": "MATCH (first:POI {osmid:$neodash_startId})-[:NEAREST_INTERSECTION]->(start:Intersection) \nMATCH (last:POI {osmid:$neodash_endId})-[:NEAREST_INTERSECTION]->(end:Intersection) \nCALL gds.shortestPath.dijkstra.stream('Intersections', {\n    sourceNode: start,\n    targetNode: end,\n    relationshipWeightProperty: 'traveltime'\n})\nYIELD  sourceNode, targetNode, costs, path\nRETURN *;\n\n\n",
          "width": 19,
          "height": 6,
          "x": 0,
          "y": 28,
          "type": "map",
          "selection": {
            "Intersection": "(no label)",
            "POI": "name"
          },
          "settings": {
            "fullscreenEnabled": true
          },
          "schema": [
            [
              "Intersection",
              "ref",
              "osmid",
              "location",
              "highway",
              "street_count"
            ],
            [
              "POI",
              "tourism_type",
              "osmid",
              "address_street",
              "name",
              "address_state",
              "location",
              "wikipedia",
              "address_zip",
              "address_city",
              "address_number"
            ]
          ]
        },
        {
          "id": "e171066c-e8ef-4061-bb41-9a0232fe2753",
          "title": "POIs Along Your Path",
          "query": "MATCH (first:POI {osmid:$neodash_startId})-[:NEAREST_INTERSECTION]->(start:Intersection) \nMATCH (last:POI {osmid:$neodash_endId})-[:NEAREST_INTERSECTION]->(end:Intersection) \nCALL apoc.algo.dijkstra(start, end, 'ROAD_SEGMENT', 'length') yield path as path\nWITH nodes(path) AS nodeset\nUNWIND nodeset AS nod\nMATCH(nod)<-[:NEAREST_INTERSECTION]-(p:POI)\nWHERE p.name IS NOT NULL\nRETURN p.name AS name\n\n\n",
          "width": 6,
          "height": 4,
          "x": 0,
          "y": 10,
          "type": "table",
          "selection": {},
          "settings": {}
        },
        {
          "id": "17a53df3-3678-407c-9ee4-8aa6804db3f0",
          "title": "POIs Along Your Path",
          "query": "MATCH (first:POI {osmid:$neodash_startId})-[:NEAREST_INTERSECTION]->(start:Intersection) \nMATCH (last:POI {osmid:$neodash_endId})-[:NEAREST_INTERSECTION]->(end:Intersection) \nCALL gds.shortestPath.dijkstra.stream('Intersections', {\n    sourceNode: start,\n    targetNode: end,\n    relationshipWeightProperty: 'traveltime'\n})\nYIELD  sourceNode, targetNode, costs, path\nWITH nodes(path) AS nodeset\nUNWIND nodeset AS nod\nMATCH(nod)<-[:NEAREST_INTERSECTION]-(p:POI)\nWHERE p.name IS NOT NULL\nRETURN p.name AS name\n\n\n",
          "width": 6,
          "height": 4,
          "x": 0,
          "y": 34,
          "type": "table",
          "selection": {},
          "settings": {}
        },
        {
          "id": "c3e59224-8673-49fe-8867-35f5ae4b7b97",
          "title": "Shortest Path by Travel Time With APOC",
          "query": "MATCH (first:POI {osmid:$neodash_startId})-[:NEAREST_INTERSECTION]->(start:Intersection) \nMATCH (last:POI {osmid:$neodash_endId})-[:NEAREST_INTERSECTION]->(end:Intersection) \n  CALL apoc.algo.dijkstra(start, end, 'ROAD_SEGMENT', 'travelTime')YIELD path, weight\nreturn path,weight,first,last\n\n\n",
          "width": 19,
          "height": 6,
          "x": 0,
          "y": 14,
          "type": "map",
          "selection": {
            "Intersection": "(no label)",
            "POI": "name"
          },
          "settings": {
            "fullscreenEnabled": true
          },
          "schema": [
            [
              "Intersection",
              "ref",
              "location",
              "highway",
              "street_count",
              "osmid"
            ],
            [
              "POI",
              "tourism_type",
              "osmid",
              "address_street",
              "name",
              "address_state",
              "location",
              "wikipedia",
              "address_zip",
              "address_city",
              "address_number"
            ]
          ]
        },
        {
          "id": "42545c4d-0390-4e82-990e-ae64cdb2c5ca",
          "title": "Path Distance",
          "query": "MATCH (first:POI {osmid:$neodash_startId})-[:NEAREST_INTERSECTION]->(start:Intersection) \nMATCH (last:POI {osmid:$neodash_endId})-[:NEAREST_INTERSECTION]->(end:Intersection) \nCALL apoc.algo.dijkstra(start, end, 'ROAD_SEGMENT', 'length') yield weight\nRETURN weight*0.00062137 as Miles\n\n\n\n\n\n",
          "width": 6,
          "height": 4,
          "x": 13,
          "y": 10,
          "type": "table",
          "selection": {},
          "settings": {}
        },
        {
          "id": "593050bb-fac4-4118-b6ca-bbe624dcc639",
          "title": "POIs Along Your Path",
          "query": "\nMATCH (first:POI {osmid:$neodash_startId})-[:NEAREST_INTERSECTION]->(start:Intersection) \nMATCH (last:POI {osmid:$neodash_endId})-[:NEAREST_INTERSECTION]->(end:Intersection) \nCALL gds.shortestPath.dijkstra.stream('Intersections', {\n    sourceNode: start,\n    targetNode: end,\n    relationshipWeightProperty: 'traveltime'\n})\nYIELD  sourceNode, targetNode, costs, path\nWITH nodes(path) AS nodeset\nUNWIND nodeset AS nod\nMATCH(nod)<-[:NEAREST_INTERSECTION]-(p:POI)\nWHERE p.name IS NOT NULL\nRETURN p\n\n\n\n\n",
          "width": 13,
          "height": 4,
          "x": 6,
          "y": 34,
          "type": "map",
          "selection": {
            "POI": "name"
          },
          "settings": {},
          "schema": [
            [
              "POI",
              "tourism_type",
              "osmid",
              "address_street",
              "name",
              "address_state",
              "location",
              "wikipedia",
              "address_zip",
              "address_city",
              "address_number"
            ]
          ]
        },
        {
          "id": "5a0a44ef-a526-4ebf-bdec-804f979c701e",
          "title": "POIs Along Your Path",
          "query": "MATCH (first:POI {osmid:$neodash_startId})-[:NEAREST_INTERSECTION]->(start:Intersection) \nMATCH (last:POI {osmid:$neodash_endId})-[:NEAREST_INTERSECTION]->(end:Intersection) \nCALL apoc.algo.dijkstra(start, end, 'ROAD_SEGMENT', 'length') yield path as path\nWITH nodes(path) AS nodeset\nUNWIND nodeset AS nod\nMATCH(nod)<-[:NEAREST_INTERSECTION]-(p:POI)\nWHERE p.name IS NOT NULL\nRETURN p\n\n\n\n\n\n",
          "width": 7,
          "height": 4,
          "x": 6,
          "y": 10,
          "type": "map",
          "selection": {
            "POI": "name"
          },
          "settings": {},
          "schema": [
            [
              "POI",
              "tourism_type",
              "osmid",
              "address_street",
              "name",
              "address_state",
              "location",
              "wikipedia",
              "address_zip",
              "address_city",
              "address_number"
            ]
          ]
        },
        {
          "id": "448c231e-d7a4-44a8-a371-c7c8b2963e84",
          "title": "POIs Along Your Path",
          "query": "MATCH (first:POI {osmid:$neodash_startId})-[:NEAREST_INTERSECTION]->(start:Intersection) \nMATCH (last:POI {osmid:$neodash_endId})-[:NEAREST_INTERSECTION]->(end:Intersection) \n  CALL apoc.algo.dijkstra(start, end, 'ROAD_SEGMENT', 'travelTime')YIELD path, weight\nWITH nodes(path) AS nodeset\nUNWIND nodeset AS nod\nMATCH(nod)<-[:NEAREST_INTERSECTION]-(p:POI)\nWHERE p.name IS NOT NULL\nRETURN p.name AS name\n\n\n",
          "width": 6,
          "height": 4,
          "x": 0,
          "y": 20,
          "type": "table",
          "selection": {},
          "settings": {}
        },
        {
          "id": "c5f2c2e4-0ac0-46ec-aeff-247c6e475388",
          "title": "POIs Along Your Path",
          "query": "\nMATCH (first:POI {osmid:$neodash_startId})-[:NEAREST_INTERSECTION]->(start:Intersection) \nMATCH (last:POI {osmid:$neodash_endId})-[:NEAREST_INTERSECTION]->(end:Intersection) \n  CALL apoc.algo.dijkstra(start, end, 'ROAD_SEGMENT', 'travelTime')YIELD path, weight\nWITH nodes(path) AS nodeset\nUNWIND nodeset AS nod\nMATCH(nod)<-[:NEAREST_INTERSECTION]-(p:POI)\nWHERE p.name IS NOT NULL\nRETURN p\n\n\n\n\n\n\n\n",
          "width": 13,
          "height": 4,
          "x": 6,
          "y": 20,
          "type": "map",
          "selection": {
            "POI": "name"
          },
          "settings": {},
          "schema": [
            [
              "POI",
              "tourism_type",
              "osmid",
              "address_street",
              "name",
              "address_state",
              "location",
              "wikipedia",
              "address_zip",
              "address_city",
              "address_number"
            ]
          ]
        }
      ]
    },
    {
      "title": "Crash Impact",
      "reports": [
        {
          "id": "0844fdbf-c46b-4c79-adbe-7d242a2b48f0",
          "title": "Crashes on Travel Date",
          "query": "MATCH (c:Crash) \nWHERE c.date = $neodash_crash_date\nreturn c\n\n\n\n\n\n",
          "width": 19,
          "height": 6,
          "x": 1,
          "y": 2,
          "type": "map",
          "selection": {
            "Crash": "(label)"
          },
          "settings": {
            "actionsRules": [
              {
                "condition": "Click",
                "field": "",
                "value": "",
                "customization": "set variable",
                "customizationValue": ""
              }
            ]
          },
          "schema": [
            [
              "Crash",
              "date",
              "zip",
              "vehicle_type_code_1",
              "contributing_factor_2",
              "vehicle_type_code_2",
              "collision_id",
              "contributing_factor_1",
              "formattedDate",
              "location",
              "off_street",
              "time",
              "street",
              "cross_street",
              "vehicle_type_code_3",
              "contributing_factor_3"
            ]
          ]
        },
        {
          "id": "b8c86e12-db4d-4127-af4d-4962480bdeee",
          "title": "Shortest Path Avoiding Crashes",
          "query": "MATCH (first:POI {osmid:$neodash_startId})-[:NEAREST_INTERSECTION]->(start:Intersection),\n      (last:POI {osmid:$neodash_endId})-[:NEAREST_INTERSECTION]->(end:Intersection),\n      (:Crash {date: $neodash_crash_date})-[:NEAREST_INTERSECTION]->(ci:Intersection)\nWITH first, last, start, end, ci\nMATCH p = shortestPath((start)-[:ROAD_SEGMENT*]-(end))\nWHERE NONE (i IN nodes(p) WHERE i = ci) \nRETURN  p , first, last LIMIT 1;\n",
          "width": 19,
          "height": 6,
          "x": 1,
          "y": 12,
          "type": "map",
          "selection": {
            "Intersection": "(label)",
            "POI": "name"
          },
          "settings": {
            "fullscreenEnabled": true
          },
          "schema": [
            [
              "Intersection",
              "ref",
              "osmid",
              "location",
              "highway",
              "street_count"
            ],
            [
              "POI",
              "tourism_type",
              "osmid",
              "address_street",
              "name",
              "address_state",
              "location",
              "wikipedia",
              "address_zip",
              "address_city",
              "address_number"
            ]
          ]
        },
        {
          "id": "2c3ad069-1522-47bb-bb25-7e9e181e8835",
          "title": "Travel Date",
          "query": "MATCH (n:`Crash`) \nWHERE toLower(toString(n.`date`)) CONTAINS toLower($input) \nRETURN DISTINCT n.`date` as value,  n.`date` as display ORDER BY size(toString(value)) ASC LIMIT 5",
          "width": 6,
          "height": 2,
          "x": 1,
          "y": 0,
          "type": "select",
          "selection": {},
          "settings": {
            "type": "Node Property",
            "entityType": "Crash",
            "propertyType": "date",
            "propertyTypeDisplay": "date",
            "parameterName": "neodash_crash_date"
          },
          "schema": []
        },
        {
          "id": "52b3a2c8-62f9-4aa6-9e4f-db97e37ed3d7",
          "title": "Crashes in Year",
          "query": "MATCH (c:Crash)\nWHERE substring(c.date,6,4) = substring($neodash_crash_date,6,4)\nRETURN COUNT(c)\n\n",
          "width": 6,
          "height": 2,
          "x": 7,
          "y": 0,
          "type": "value",
          "selection": {},
          "settings": {},
          "schema": []
        }
      ]
    },
    {
      "title": "POI Information",
      "reports": [
        {
          "id": "47211d9e-58f7-4eab-9eed-cbae3c9c9d2a",
          "title": "Wikipedia Page for Starting Location",
          "query": "https://en.wikipedia.org/wiki/$neodash_en\n\n\n\n",
          "width": 6,
          "height": 4,
          "x": 0,
          "y": 0,
          "type": "iframe",
          "selection": {},
          "settings": {
            "actionsRules": [
              {
                "condition": "Click",
                "field": "",
                "value": "",
                "customization": "set variable",
                "customizationValue": ""
              }
            ]
          },
          "schema": []
        },
        {
          "id": "f7e4b106-6d32-456d-9c47-5bb5c66ac80a",
          "title": "Wikipedia Page for End Location",
          "query": "https://en.wikipedia.org/wiki/$neodash_en2\n\n\n\n\n\n\n",
          "width": 6,
          "height": 4,
          "x": 6,
          "y": 0,
          "type": "iframe",
          "selection": {},
          "settings": {},
          "schema": []
        },
        {
          "id": "af9383ce-a8e5-43c6-a89a-64859c88392f",
          "title": "Starting Location Address",
          "query": "MATCH (p:POI {osmid:$neodash_startId}) \n\nRETURN p.address_number + ' ' + p.address_street + \", \"+ p.address_city + ', '+ p.address_state + ', '+ p.address_zip",
          "width": 6,
          "height": 2,
          "x": 0,
          "y": 4,
          "type": "value",
          "selection": {},
          "settings": {
            "type": "Node Property",
            "fontSize": 20
          },
          "schema": []
        },
        {
          "id": "e78d58b5-a0dd-4d4e-9dc1-3a5a5b041b9b",
          "title": "End Location Address",
          "query": "MATCH (p:POI {osmid:$neodash_endId}) \n\nRETURN p.address_number + ' ' + p.address_street + \", \"+ p.address_city + ', '+ p.address_state + ', '+ p.address_zip\n",
          "width": 6,
          "height": 2,
          "x": 6,
          "y": 4,
          "type": "value",
          "selection": {},
          "settings": {
            "type": "Node Property",
            "fontSize": 20
          },
          "schema": []
        }
      ]
    }
  ],
  "parameters": {},
  "extensions": {
    "active": true,
    "activeReducers": [],
    "advanced-charts": {
      "active": true
    },
    "actions": {
      "active": true
    }
  },
  "uuid": "0be681ff-e7cb-4e4c-b5ed-ad0319495ad0"
}